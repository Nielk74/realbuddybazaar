stages:
  - install dependencies
  - lint
  - build
  - test

.ci-front:
  image: node
  tags:
    - docker
  before_script:
    - cd frontend

.ci-front-write-cache:
  extends: .ci-front
  cache:
    key: front-$CI_COMMIT_REF_SLUG
    paths:
      - frontend/node_modules/
    policy: push

.ci-front-read-cache:
  extends: .ci-front
  cache:
    key: front-$CI_COMMIT_REF_SLUG
    paths:
      - frontend/node_modules/
    policy: pull

install front dependencies:
  extends: .ci-front-write-cache
  stage: install dependencies
  script:
    - npm ci --prefer-offline

lint front:
  extends: .ci-front-read-cache
  stage: lint
  script:
    - npm run lint
  needs:
    - install front dependencies

build front:
  tags:
    - docker
    - perso
  image: sebastienviardot/rnenvsv:buster
  stage: build
  extends: .ci-front-read-cache
  script:
  - ./genereapk.sh
  artifacts:
    paths:
      - frontend/public/*
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
      when: always
    - when: manual
      allow_failure: true

test-e2e front:
  tags:
    - docker 
    - perso
  image: cypress/base:latest
  stage: test
  extends: .ci-front-read-cache
  script:
    - npm ci --prefer-offline
    - npm install -g wait-on
    - npm run web &
    - wait-on http://localhost:19006
    - npm run test
  needs:
    - install front dependencies
  artifacts:
    when: always
    paths:
      - frontend/cypress/videos/*

